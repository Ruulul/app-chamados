{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LORENA UBS\\\\app-chamados\\\\src\\\\Pages\\\\Chamado.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Mensagem from \"../components/Mensagem\";\nimport { Typography } from \"@mui/material\";\nimport { Card, Grid, Button, Stack, ButtonGroup, Divider, Box, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chamado = props => {\n  _s();\n\n  const [atualizado, setAtualiza] = useState(false);\n  const [mensagens, setMensagens] = useState([]);\n  const [inserirMensagem, setMensagem] = useState(false);\n  const [leuMensagens, lerMensagem] = useState(false);\n\n  function atualiza() {\n    setAtualiza(!atualizado);\n  }\n\n  function le_mensagens() {\n    let m = [];\n    props.infos.chat.forEach(mensagem => {\n      m = [...m, /*#__PURE__*/_jsxDEV(Divider, {\n        orientation: \"vertical\",\n        flexItem: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Mensagem, {\n        autor: mensagem.usuario,\n        mensagem: mensagem.mensagem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)];\n    });\n    m.reverse();\n    setMensagens(m);\n    lerMensagem(true);\n  }\n\n  function add_e_atualiza() {\n    lerMensagem(false);\n    setMensagem(false);\n    le_mensagens();\n    atualiza();\n  }\n\n  useEffect(() => !leuMensagens ? le_mensagens() : undefined);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: {\n      xs: \"column\",\n      sm: \"row\"\n    },\n    spacing: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          m: 2,\n          children: [\"Chamado N\\xFAmero \", props.infos.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          m: 2,\n          children: \"Assunto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          m: 2,\n          children: props.infos.assunto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          m: 2,\n          children: \"Categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          m: 2,\n          children: props.infos.departamento\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          m: 2,\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          m: 2,\n          children: props.infos.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: inserirMensagem ? /*#__PURE__*/_jsxDEV(AddMensagem, {\n        infos: props.infos,\n        salvaMensagem: props.atualiza,\n        setMensagem: add_e_atualiza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Mensagens, {\n        mensagens: mensagens,\n        setMensagem: setMensagem,\n        infos: props.infos,\n        mudastatus: props.mudastatus,\n        atualiza: atualiza\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chamado, \"Xt2IAdEoMLg9L3QiMBbgYd0ybMM=\");\n\n_c = Chamado;\nexport default Chamado;\n\nconst Mensagens = props => {\n  _s2();\n\n  const [scale, setScale] = useState(1);\n\n  function scale_to_0() {\n    if (scale) setScale(0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            m: 2,\n            children: \"Mensagens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            alignItems: \"stretch\",\n            justifyContent: \"flex-start\",\n            spacing: 6,\n            children: props.mensagens\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        sx: {\n          placeSelf: \"center\",\n          placeItems: \"center\"\n        },\n        orientation: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          sx: {\n            width: \"fit-content\",\n            scale\n          },\n          onClick: () => {\n            props.setMensagem(true);\n          },\n          children: [\"Adicionar Mensagem: \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlusCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            width: \"fit-content\",\n            scale\n          },\n          onClick: () => {\n            props.mudastatus(props.infos);\n            props.atualiza();\n          },\n          children: props.infos.status === \"pendente\" ? \"Marcar como Resolvido\" : props.infos.status === \"resolvido\" ? \"Marcar como Fechado\" : scale_to_0()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Mensagens, \"KYf8QDfWi1lgQwjpWB5xVlmXlQo=\");\n\n_c2 = Mensagens;\n\nconst AddMensagem = props => {\n  _s3();\n\n  const [mensagem, setNovaMensagem] = useState(\"\");\n  const [usuario, setUsuario] = useState(\"\");\n\n  function handleChange(event) {\n    if (event.target.name === \"mensagem\") setNovaMensagem(event.target.value);else if (event.target.name === \"usuario\") setUsuario(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let novasInfos = props.infos;\n    novasInfos.chat.push({\n      usuario,\n      mensagem\n    });\n    props.setMensagem();\n    props.salvaMensagem(novasInfos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          mt: 1\n        },\n        label: \"Usu\\xE1rio\",\n        name: \"usuario\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Mensagem\",\n        multiline: true,\n        name: \"mensagem\",\n        minRows: \"15\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          width: \"100%\"\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        children: \"Enviar Mensagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(AddMensagem, \"1mqQFmNmCu6SzdowgBPLvsfSXBM=\");\n\n_c3 = AddMensagem;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Chamado\");\n$RefreshReg$(_c2, \"Mensagens\");\n$RefreshReg$(_c3, \"AddMensagem\");","map":{"version":3,"sources":["C:/Users/LORENA UBS/app-chamados/src/Pages/Chamado.js"],"names":["React","useEffect","useState","FontAwesomeIcon","faPlusCircle","Mensagem","Typography","Card","Grid","Button","Stack","ButtonGroup","Divider","Box","TextField","Chamado","props","atualizado","setAtualiza","mensagens","setMensagens","inserirMensagem","setMensagem","leuMensagens","lerMensagem","atualiza","le_mensagens","m","infos","chat","forEach","mensagem","usuario","reverse","add_e_atualiza","undefined","xs","sm","id","assunto","departamento","status","mudastatus","Mensagens","scale","setScale","scale_to_0","placeSelf","placeItems","width","AddMensagem","setNovaMensagem","setUsuario","handleChange","event","target","name","value","handleSubmit","preventDefault","novasInfos","push","salvaMensagem","mt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport Mensagem from \"../components/Mensagem\";\r\n\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Button,\r\n  Stack,\r\n  ButtonGroup,\r\n  Divider,\r\n  Box,\r\n  TextField\r\n} from \"@mui/material\";\r\n\r\nconst Chamado = (props) => {\r\n  const [atualizado, setAtualiza] = useState(false);\r\n  const [mensagens, setMensagens] = useState([]);\r\n  const [inserirMensagem, setMensagem] = useState(false);\r\n  const [leuMensagens, lerMensagem] = useState(false);\r\n\r\n  function atualiza() {\r\n    setAtualiza(!atualizado);\r\n  }\r\n\r\n  function le_mensagens() {\r\n    let m = [];\r\n    props.infos.chat.forEach((mensagem) => {\r\n      m = [\r\n        ...m,\r\n        <Divider orientation=\"vertical\" flexItem />,\r\n        <Mensagem autor={mensagem.usuario} mensagem={mensagem.mensagem} />\r\n      ];\r\n    });\r\n    m.reverse();\r\n    setMensagens(m);\r\n    lerMensagem(true);\r\n  }\r\n\r\n  function add_e_atualiza() {\r\n    lerMensagem(false);\r\n    setMensagem(false);\r\n    le_mensagens();\r\n    atualiza();\r\n  }\r\n\r\n  useEffect(() => (!leuMensagens ? le_mensagens() : undefined));\r\n\r\n  return (\r\n    <Grid container direction={{ xs: \"column\", sm: \"row\" }} spacing={3}>\r\n      <Grid item xs={6}>\r\n        <Card>\r\n          <Typography variant=\"h4\" m={2}>\r\n            Chamado Número {props.infos.id}\r\n          </Typography>\r\n          <Typography variant=\"h5\" m={2}>\r\n            Assunto\r\n          </Typography>\r\n          <Typography m={2}>{props.infos.assunto}</Typography>\r\n          <Typography variant=\"h5\" m={2}>\r\n            Categoria\r\n          </Typography>\r\n          <Typography m={2}>{props.infos.departamento}</Typography>\r\n          <Typography variant=\"h5\" m={2}>\r\n            Status\r\n          </Typography>\r\n          <Typography m={2}>{props.infos.status}</Typography>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        {inserirMensagem ? (\r\n          <AddMensagem\r\n            infos={props.infos}\r\n            salvaMensagem={props.atualiza}\r\n            setMensagem={add_e_atualiza}\r\n          />\r\n        ) : (\r\n          <Mensagens\r\n            mensagens={mensagens}\r\n            setMensagem={setMensagem}\r\n            infos={props.infos}\r\n            mudastatus={props.mudastatus}\r\n            atualiza={atualiza}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Chamado;\r\n\r\nconst Mensagens = (props) => {\r\n  const [scale, setScale] = useState(1);\r\n\r\n  function scale_to_0() {\r\n    if (scale) setScale(0);\r\n  }\r\n  return (\r\n    <Card>\r\n      <Stack spacing={3}>\r\n        <Grid container>\r\n          <Grid item xs={1} />\r\n          <Grid item xs={10}>\r\n            <Typography variant=\"h4\" m={2}>\r\n              Mensagens\r\n            </Typography>\r\n\r\n            <Stack alignItems=\"stretch\" justifyContent=\"flex-start\" spacing={6}>\r\n              {props.mensagens}\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={1} />\r\n        </Grid>\r\n        <ButtonGroup\r\n          sx={{ placeSelf: \"center\", placeItems: \"center\" }}\r\n          orientation=\"vertical\"\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={{ width: \"fit-content\", scale }}\r\n            onClick={() => {\r\n              props.setMensagem(true);\r\n            }}\r\n          >\r\n            Adicionar Mensagem: <FontAwesomeIcon icon={faPlusCircle} />\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{ width: \"fit-content\", scale }}\r\n            onClick={() => {\r\n              props.mudastatus(props.infos);\r\n              props.atualiza();\r\n            }}\r\n          >\r\n            {props.infos.status === \"pendente\"\r\n              ? \"Marcar como Resolvido\"\r\n              : props.infos.status === \"resolvido\"\r\n              ? \"Marcar como Fechado\"\r\n              : scale_to_0()}\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst AddMensagem = (props) => {\r\n  const [mensagem, setNovaMensagem] = useState(\"\");\r\n  const [usuario, setUsuario] = useState(\"\");\r\n  function handleChange(event) {\r\n    if (event.target.name === \"mensagem\") setNovaMensagem(event.target.value);\r\n    else if (event.target.name === \"usuario\") setUsuario(event.target.value);\r\n  }\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    let novasInfos = props.infos;\r\n    novasInfos.chat.push({ usuario, mensagem });\r\n    props.setMensagem();\r\n    props.salvaMensagem(novasInfos);\r\n  }\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit}>\r\n      <Stack spacing>\r\n        <TextField\r\n          sx={{ mt: 1 }}\r\n          label=\"Usuário\"\r\n          name=\"usuario\"\r\n          type=\"text\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          label=\"Mensagem\"\r\n          multiline\r\n          name=\"mensagem\"\r\n          minRows=\"15\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <Button\r\n          sx={{ width: \"100%\" }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          type=\"submit\"\r\n        >\r\n          Enviar Mensagem\r\n        </Button>\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}